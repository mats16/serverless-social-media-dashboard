AWSTemplateFormatVersion: '2010-09-09'
Description: '[Social Media Dashboard] Twitter Producer Stack'

Parameters:

  ParentStackName:
    Type: String

  VpcId:
    Type: String
  
  PublicSubnetList:
    Type: CommaDelimitedList

  TweetStreamName:
    Type: String

  TwitterProducerImage:
    Type: String

  FluentBitImage:
    Type: String

  TwitterTopicsParameter:
    Type: String
  TwitterLanguagesParameter:
    Type: String
  TwitterFilterLevelParameter:
    Type: String
  TwitterConsumerKey:
    Type: String
  TwitterConsumerSecretKey:
    Type: String
  TwitterAccessToken:
    Type: String
  TwitterAccessTokenSecret:
    Type: String

  ComprehendEntityScoreThreshold:
    Type: Number
    Default: 0.8
    MaxValue: 1
    MinValue: 0

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for ECS Twitter Producer
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: twitter-producer-sg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'
      Policies:
        - PolicyName: PutTweets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: KinesisAccess
                Effect: Allow
                Action:
                  - 'kinesis:PutRecord'
                  - 'kinesis:PutRecords'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${TweetStreamName}'

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      Policies:
        - PolicyName: get-parameters-and-secrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                  - 'secretsmanager:GetSecretValue'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParentStackName}/*'
                  - !Sub 'arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ParentStackName}/*'

  EcsLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/${ParentStackName}/twitter/ecs'
      RetentionInDays: 14

  EcsCluster:
    Type: AWS::ECS::Cluster

  TaskDef: 
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: twitter-stream-producer
      RequiresCompatibilities: 
        - "FARGATE"
      NetworkMode: awsvpc
      Cpu: "256"
      Memory: "512"
      TaskRoleArn: !Ref TaskRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      ContainerDefinitions: 
        - Name: twitter-stream-producer
          Image: !Ref TwitterProducerImage
          Essential: "true"
          DependsOn:
            - ContainerName: fluent-bit
              Condition: START
          Secrets:
            - Name: TWITTER_TOPICS
              ValueFrom: !Ref TwitterTopicsParameter
            - Name: TWITTER_LANGUAGES
              ValueFrom: !Ref TwitterLanguagesParameter
            - Name: TWITTER_FILTER_LEVEL
              ValueFrom: !Ref TwitterFilterLevelParameter
            - Name: CONSUMER_KEY
              ValueFrom: !Ref TwitterConsumerKey
            - Name: CONSUMER_SECRET
              ValueFrom: !Ref TwitterConsumerSecretKey
            - Name: ACCESS_TOKEN
              ValueFrom: !Ref TwitterAccessToken
            - Name: ACCESS_TOKEN_SECRET
              ValueFrom: !Ref TwitterAccessTokenSecret
          ReadonlyRootFilesystem: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref EcsLogGroup
              awslogs-stream-prefix: twitter-producer
        - Name: fluent-bit
          Image: !Ref FluentBitImage
          Essential: "true"
          Environment:
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: DELIVERY_STREAM_NAME
              Value: !Ref TweetStreamName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref EcsLogGroup
              awslogs-stream-prefix: fluent-bit

  EcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: 2
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      NetworkConfiguration: 
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets: !Ref PublicSubnetList
      TaskDefinition: !Ref TaskDef

Outputs: {}

